exit
@stress_datas
exit
@stress_datas
exit
@happy_datas
exit
@happy_datas.each { |date, rows| puts "#{date} の幸福値: #{rows.sum(&:happy_count)}" }
@happy_datas
exit
@mean_comment = current_user.mean_comments.find(params[:id])
exit
params[:id]
@mean_comment = current_user.mean_comments.find(params[:id])
exit
@mean = Mean.find(params[:mean_id])
@mean = Mean.find(params[:id])
@mean_comment.destroy!
@mean_comment = current_user.mean_comments.find(params[:id])
exit
@mean_comment = current_user.mean_comments.find(params[:id])
exit
@mean = Mean.find(params[:id])
params[:id]
@mean_comment = current_user.mean_comments.find(params[:id])
exit
params
@mean_comment = current_user.mean_comments.find(params[:id])
params[:id] = "16"
params[:mean_id] = "31"
params[:mean_id]
@mean_comment = current_user.mean_comments.find(params[:id])
exit
@mean = current_user.means.find(params[:mean_id])
params[:mean_id]
@mean_comment = current_user.mean_comments.new(mean_comment_params)
exit
@mean_comment = current_user.mean_comments.new(mean_comment_params)
@mean = Mean.find(31)
exit
@mean = Mean.find(31)
@mean = current_user.means.find(params[:id])
@mean_comment = current_user.mean_comments.new(mean_comment_params)
exit
@mean_comment = @mean.mean_comments.find(params[:mean_id])
@mean = current_user.means.find(params[:id])
exit
@mean_comment = @mean.mean_comments.find(params[:meant_id])
@mean_comment = @mean.mean_comments.find(params[:mean_comment_id])
@mean = current_user.means.find(params[:id])
exit
@mean = current_user.means.find(params[:id])
@mean
exit
@report.reported_id = @user.id
@report.reporter_id = current_user.id
@report = Report.new(report_params)
@user = User.find(params[:user_id])
exit
@user = User.find(params[:user_id])
exit
@user.id
@user = User.find(params[:user_id])
@report = Report.new
params[:user_id]
new_report_path(user_id: @user.id)
user_id: @user.id
exit
user
@user = User.find(params[:id])
@report.reported_id = @user.id
@report.reporter_id = current_user.id
@report = Report.new(report_params)
@reports
exit
@m = Mean.ransack(params[:m])
@means
exit
@means
exit
@mean_comment = @mean.mean_comments.find(params[:mean_id])
params[:mean_id]
params[:id]
mean_comments
@mean_comment.id
@mean_comment = @mean.mean_comments.find(3)
@mean.mean_comments.find(3)
@mean.mean_comments
@mean_comment = @mean.mean_comments.find(params[:id])
@mean = current_user.means.find(params[:id])
exit
@mean_comment = @mean.mean_comments.find(params[:id])
@mean = current_user.means.find(params[:id])
@mean = Mean.find(params[:id])
@mean_comment = current_user.mean_comments.find(params[:id])
@mean_comment
exit
@user_like_ranks = @users.order(total_like_counts: :desc).limit(10)
/Users/inagakiyuya/workspace/pf/stressdiary 
exit
@users.each do |user|
      user.total_like_counts = user.total_likes
    end
@users.each do |user|
@users = User.all
exit
@users.each do |user|
      user.total_like_counts = user.total_likes
    end
exit
@users = User.joins(means: :likes).group('users.id').order('COUNT(likes.id) DESC')
exit
total_like_counts
@user.means.each do |mean|
        total_like_counts += mean.likes.where(mean_id: mean.id).count
      end
total_like_counts = 0
@user = User.find(2)
@user = User.all
@user = User.find_by(name: MarySteuber)
@user = User.find_by(name: Mary Steuber)
total_like_counts
@user.means.each do |mean|
        total_like_counts += mean.likes.where(mean_id: mean.id).count
      end
@user
total_like_counts = 0
@user.means.each do |mean|
        total_like_counts += mean.likes.where(mean_id: mean.id).count
      end
@user = User.find(1)
exit
@users.each do |user|
      total_like_counts = 0
      user.means.each do |mean|
        total_like_counts += mean.likes.count
      end
    end
@users
exit
@stress_datas.each do |date, rows|
      sum_stress_count = rows.map(&:stress_count).sum
      puts "#{date} のストレス値: #{sum_stress_count}"
    end
exit
@stress_datas.each do |date, rows|
      sum_stress_count = rows.map(&:stress_count).sum
      puts "#{date} のストレス値: #{sum_stress_count}"
    end
exit
@stress_datas.each do |date, rows|
  sum_stress_count = rows.map(&:stress_count).sum
  puts "#{date} のストレス合計: #{sum_stress_count}"
end
@stress_datas = @diaries
                    .joins(:stress_diagnosis)
                    .where('diaries.created_at >= ?', 31.days.ago)
                    .where('stress_diagnoses.stress_count >= ?', 0)
                    .select("date(diaries.created_at) as date, stress_diagnoses.stress_count")
                    .order("date ASC")
                    .group_by { |d| d.date }
@diaries = current_user.diaries.includes(:stress_diagnosis)
exit
@stress_datas = @diaries.joins(:stress_diagnosis).
                          where('stress_diagnoses.stress_count >= ?', 0).
                          select("date(diaries.created_at) as date, count(*) as count, stress_diagnoses.stress_count, diaries.id").
                          group("date(diaries.created_at), stress_diagnoses.id, diaries.id").map {|d| [d.date, d.count, d.stress_count] }
@diaries = current_user.diaries.includes(:stress_diagnosis)
@stress_datas = @diaries.joins(:stress_diagnosis).
                          where('stress_diagnoses.stress_count >= ?', 0).
                          select("date(diaries.created_at) as date, count(*) as count, stress_diagnoses.stress_count, diaries.id")
@stress_datas = @diaries.joins(:stress_diagnosis).
                          where('stress_diagnoses.stress_count >= ?', 0)
@diaries = current_user.diaries.includes(:stress_diagnosis)
@stress_datas = @diaries.joins(:stress_diagnosis).
                          where('stress_diagnoses.stress_count >= ?', 0).
                          select("date(diaries.created_at) as date, count(*) as count, stress_diagnoses.stress_count, diaries.id").
                          group("date(diaries.created_at), stress_diagnoses.id, diaries.id").map {|d| [d.date, d.count, d.stress_count] }
@diaries = current_user.diaries.includes(:stress_diagnosis)
exit
@stress_datas = current_user.diaries.joins(:stress_diagnosis).
                          where(stress_diagnoses: { stress_count: params[:stress_count] })
exit
current_user.diaries.joins(:stress_diagnosis).
                          where(stress_diagnoses: { stress_count: params[:stress_count] })
current_user.diaries.stress_diagnosis
current_user.diary
current_user.diaries.joins(:stress_diagnosis)
current_user.diaries
current_user.diaries.joins(:stress_diagnosis).
                          where(stress_diagnoses: { stress_count: params[:stress_count] })
@stress_datas
exit
@diaries
@diary
@stress_datas
Diary.joins(:stress_diagnosis).
                          where(user_id: current_user.id, stress_diagnoses: { stress_count: params[:stress_count] })
Diary.joins(:stress_diagnosis).
   35:                           where(user_id: current_user.id, stress_diagnoses: { stress_count: params[:stress_count] }).
@stress_datas
exit
Diary.joins(:stress_diagnosis).
                          where(stress_diagnoses: { stress_count: params[:stress_count] })
exit
<%= line_chart @stress_datas %>
line_chart @stress_datas
@stress_datas
exit
@diary.happy_diagnosis
@diary.stress_diagnosis
@diary
exit
self.stress_diagnosis
@diary
@happy_diagnosis
@stress_diagnosis
@diary.stress_diagnosis.stress_count
@diary.stress_diagnosis
@diary.happy_diagnosis.happy_count
@diary.happy_diagnosis
@diary
exit
@diary.title
@diary.stress_diagnosis.stress_count
@diary
@stress_diagnosis.stress_count
@stress_diagnosis.calculate_stress_count
self.stress_count
exit
@stress_diagnosis.calculate_stress_count
exit
total_points = answer_counts * 4
answer_counts = @diary.stress_diagnosis.attributes.select { |k, v| v == true }.size
{"answer1"=>true, "answer3"=>true, "answer5"=>true}.size
@diary.stress_diagnosis.attributes.select { |k, v| v == true }
@diary.stress_diagnosis.attributes
@diary.stress_diagnosis.select { |k, v| v == true }.keys
@diary.stress_diagnosis.answer1
@diary.stress_diagnosis
@diary
stress_diagnosis.answer1
answer1.true?
stress_diagnosis_params
params[answer1]
total_points
@stress_diagnosis.stress_count
